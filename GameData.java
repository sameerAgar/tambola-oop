
import java.util.ArrayList;

public class GameData {
	
	// constructor
	private static GameData sharedData = new GameData();
	private GameData() {}
	public static GameData getInstance() {
		return sharedData;
	}
	
	// variables
	public boolean numAnnouncedFlag = false;
	public boolean gameCompleteFlag = false;
	public int countNumGenerated = 0;
	public int winnerID = -1;
	public boolean[] playerChanceFlag = new boolean[Settings.numPlayers];
	public boolean everyoneChanceFlag = false;
	public int[] winningNum = new int[Settings.numMatches];
	public int[] countAll = new int[Settings.numPlayers];
	
	
	// lock object
	public Object lock = new Object();

	// numbers generated by moderator
	private ArrayList<Integer> numGenerated = new ArrayList<Integer>();
	public void addNumGenerated(int number) {
		this.numGenerated.add(number);
	}
	public int getLastNumGenerated() {
		return numGenerated.get(this.countNumGenerated);
	}
	
	// check whether everyone got their chance
	public synchronized void setEveryoneChanceFlag() {
		for (int i=0; i<Settings.numPlayers; i++) {
			if (this.playerChanceFlag[i] == false) {
				this.everyoneChanceFlag = false;
				return;
			}
		}
		this.everyoneChanceFlag = true;
		return;
	}
	
	// initializing the count of all the players to zero
	public void setCountAll() {
		for (int i=0; i<Settings.numPlayers; i++) {
			this.countAll[i] = 0;
		}
		return;
	}
}
